"""Add notion_category to sync_configs

Revision ID: 6e17300e4990
Revises: 
Create Date: 2025-07-05 16:18:46.607296

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6e17300e4990'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sqlite_sequence')
    op.drop_index('idx_file_hash', table_name='image_mappings')
    op.drop_index('idx_image_mappings_hash', table_name='image_mappings')
    op.drop_index('idx_image_mappings_storage_type', table_name='image_mappings')
    op.drop_index('idx_image_mappings_upload_time', table_name='image_mappings')
    op.drop_index('idx_original_url', table_name='image_mappings')
    op.drop_table('image_mappings')
    op.alter_column('images', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('images', 'created_at',
               existing_type=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.create_index('idx_created_at', 'images', ['created_at'], unique=False)
    op.create_index('idx_file_hash', 'images', ['hash'], unique=False)
    op.create_index('idx_filename', 'images', ['filename'], unique=False)
    op.create_index('idx_original_url', 'images', ['original_url'], unique=False, mysql_length=255)
    op.drop_constraint(None, 'images', type_='foreignkey')
    op.add_column('sync_configs', sa.Column('notion_category', sa.String(length=50), nullable=True))
    op.drop_index('idx_sync_configs_document_id', table_name='sync_configs')
    op.drop_index('idx_sync_configs_enabled', table_name='sync_configs')
    op.drop_index('idx_sync_configs_platform', table_name='sync_configs')
    op.create_index('idx_auto_sync', 'sync_configs', ['auto_sync'], unique=False)
    op.create_index('idx_platform_document', 'sync_configs', ['platform', 'document_id'], unique=False)
    op.create_index('idx_sync_enabled', 'sync_configs', ['is_sync_enabled'], unique=False)
    op.create_index('idx_updated_at', 'sync_configs', ['updated_at'], unique=False)
    op.alter_column('sync_records', 'id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
    op.alter_column('sync_records', 'content_type',
               existing_type=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text("'document'"))
    op.alter_column('sync_records', 'sync_status',
               existing_type=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('sync_records', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('sync_records', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.drop_index('idx_sync_records_composite', table_name='sync_records')
    op.drop_index('idx_sync_records_created_at', table_name='sync_records')
    op.drop_index('idx_sync_records_platform', table_name='sync_records')
    op.drop_index('idx_sync_records_source_id', table_name='sync_records')
    op.drop_index('idx_sync_records_source_platform', table_name='sync_records')
    op.drop_index('idx_sync_records_status', table_name='sync_records')
    op.drop_index('idx_sync_records_updated_at', table_name='sync_records')
    op.create_index('idx_source_platform_id', 'sync_records', ['source_platform', 'source_id'], unique=False)
    op.create_index('idx_sync_status_created', 'sync_records', ['sync_status', 'created_at'], unique=False)
    op.create_index('idx_sync_time', 'sync_records', ['last_sync_time'], unique=False)
    op.create_index('idx_target_platform_id', 'sync_records', ['target_platform', 'target_id'], unique=False)
    op.drop_column('sync_records', 'document_title')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sync_records', sa.Column('document_title', sa.TEXT(), server_default=sa.text("('')"), nullable=True))
    op.drop_index('idx_target_platform_id', table_name='sync_records')
    op.drop_index('idx_sync_time', table_name='sync_records')
    op.drop_index('idx_sync_status_created', table_name='sync_records')
    op.drop_index('idx_source_platform_id', table_name='sync_records')
    op.create_index('idx_sync_records_updated_at', 'sync_records', ['updated_at'], unique=False)
    op.create_index('idx_sync_records_status', 'sync_records', ['sync_status'], unique=False)
    op.create_index('idx_sync_records_source_platform', 'sync_records', ['source_platform'], unique=False)
    op.create_index('idx_sync_records_source_id', 'sync_records', ['source_id'], unique=False)
    op.create_index('idx_sync_records_platform', 'sync_records', ['source_platform'], unique=False)
    op.create_index('idx_sync_records_created_at', 'sync_records', ['created_at'], unique=False)
    op.create_index('idx_sync_records_composite', 'sync_records', ['sync_status', 'created_at'], unique=False)
    op.alter_column('sync_records', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('sync_records', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('sync_records', 'sync_status',
               existing_type=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('sync_records', 'content_type',
               existing_type=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text("'document'"))
    op.alter_column('sync_records', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.drop_index('idx_updated_at', table_name='sync_configs')
    op.drop_index('idx_sync_enabled', table_name='sync_configs')
    op.drop_index('idx_platform_document', table_name='sync_configs')
    op.drop_index('idx_auto_sync', table_name='sync_configs')
    op.create_index('idx_sync_configs_platform', 'sync_configs', ['platform'], unique=False)
    op.create_index('idx_sync_configs_enabled', 'sync_configs', ['is_sync_enabled'], unique=False)
    op.create_index('idx_sync_configs_document_id', 'sync_configs', ['document_id'], unique=False)
    op.drop_column('sync_configs', 'notion_category')
    op.create_foreign_key(None, 'images', 'sync_records', ['sync_record_id'], ['id'])
    op.drop_index('idx_original_url', table_name='images', mysql_length=255)
    op.drop_index('idx_filename', table_name='images')
    op.drop_index('idx_file_hash', table_name='images')
    op.drop_index('idx_created_at', table_name='images')
    op.alter_column('images', 'created_at',
               existing_type=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('images', 'id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)
    op.create_table('image_mappings',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('original_url', sa.VARCHAR(length=500), nullable=False),
    sa.Column('qiniu_url', sa.VARCHAR(length=500), nullable=False),
    sa.Column('file_hash', sa.VARCHAR(length=64), nullable=False),
    sa.Column('file_size', sa.INTEGER(), nullable=False),
    sa.Column('upload_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('access_count', sa.INTEGER(), nullable=False),
    sa.Column('local_url', sa.TEXT(), nullable=True),
    sa.Column('file_type', sa.TEXT(), server_default=sa.text('("image")'), nullable=True),
    sa.Column('last_access_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('storage_type', sa.TEXT(), server_default=sa.text('("qiniu")'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_original_url', 'image_mappings', ['original_url'], unique=False)
    op.create_index('idx_image_mappings_upload_time', 'image_mappings', ['upload_time'], unique=False)
    op.create_index('idx_image_mappings_storage_type', 'image_mappings', ['storage_type'], unique=False)
    op.create_index('idx_image_mappings_hash', 'image_mappings', ['file_hash'], unique=False)
    op.create_index('idx_file_hash', 'image_mappings', ['file_hash'], unique=False)
    op.create_table('sqlite_sequence',
    sa.Column('name', sa.NullType(), nullable=True),
    sa.Column('seq', sa.NullType(), nullable=True)
    )
    # ### end Alembic commands ###